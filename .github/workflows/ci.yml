name: CI Pipeline

on:
  push:
    branches:
      - main       # Run the pipeline on pushes to the main branch
      - develop    # Also run the pipeline on pushes to the develop branch
  pull_request:
    branches:
      - main       # Run the pipeline for pull requests targeting the main branch
      - develop    # Run the pipeline for pull requests targeting the develop branch

jobs:
  lint-and-test:
    runs-on: ubuntu-latest   # You can choose different runners depending on your needs

    steps:
      # Checkout code from the repo
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up Node.js (specify version)
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'   # Specify the Node.js version you're using

      # Install dependencies
      - name: Install dependencies
        run: npm install

      # Run Linting (ESLint) for Next.js project
      - name: Run Linting
        run: npm run lint

      # Run Unit Tests with Jest (You may need to install Jest if it's not in your package.json)
      - name: Run Unit Tests
        run: npm test

      # Optionally, upload test results (if you want to use test reports)
      - name: Upload Test Results (optional)
        if: failure()  # Only upload if the test fails
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: ./test-results/  # Path to your test results folder (adjust based on your setup)

  # Job to build the Next.js app
  build:
    runs-on: ubuntu-latest
    needs: lint-and-test   # Only runs after lint-and-test completes successfully

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up Node.js (specify version)
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      # Install dependencies
      - name: Install dependencies
        run: npm install

      # Build the Next.js app
      - name: Build the Next.js app
        run: npm run build

  # Optional deployment step to Vercel (or any other platform of your choice)
  deploy:
    runs-on: ubuntu-latest
    needs: build   # Only runs after the build step completes successfully
    if: github.ref == 'refs/heads/main'  # Only deploy on push to the main branch (adjust to your desired deploy branch)

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up Node.js (specify version)
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      # Install dependencies
      - name: Install dependencies
        run: npm install

      # Deploy to Vercel (or another platform, like Netlify or AWS)
      - name: Deploy to Vercel
        run: |
          npm i -g vercel
          vercel --prod --confirm  # Deploy to Vercel; ensure you have Vercel CLI and credentials set up
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}   # Use secrets for Vercel authentication
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}  # Project ID
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}  # Organization ID
